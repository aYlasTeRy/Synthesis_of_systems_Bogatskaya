# https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/submissions/945067190/

"""
Предположим, что массив длины, n отсортированный в порядке возрастания, поворачивается между 1 и n временами.
Например, массив nums = [0,1,2,4,5,6,7] может стать:

[4,5,6,7,0,1,2] если он был повернут 4 раз.
[0,1,2,4,5,6,7] если он был повернут 7 раз.
Обратите внимание, что поворот массива [a[0], a[1], a[2], ..., a[n-1]] 1 раз
приводит к получению массива [a[n-1], a[0], a[1], a[2], ..., a[n-2]].
Учитывая отсортированный повернутый массив nums уникальных элементов, верните минимальный элемент этого массива.
"""

class Solution:
    def findMin(self, nums: List[int]) -> int:

        l = 0
        r = len(nums) - 1

        while l < r:
            mid = (l + r) // 2

            if nums[r] < nums[mid]:
                l = mid + 1
            else:
                r = mid
        return nums[l]